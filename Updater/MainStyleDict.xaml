<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Updater" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Storyboard x:Key="OpenAnimation">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.15" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFF5B96F" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                <EasingColorKeyFrame KeyTime="0" Value="Black" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.68" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="rectangle" Fill="#FFFFAD46" HorizontalAlignment="Stretch" Width="Auto" RadiusX="6" RadiusY="6" Stroke="{x:Null}" />
            <TextBlock x:Name="textBlock" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}" Width="Auto" Foreground="#FFFFEBD1" FontFamily="Raleway" FontSize="{TemplateBinding FontSize}" FontWeight="Medium" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="TrayExitTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/tray.png" />
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/tray_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ServerRadioTemplate" TargetType="{x:Type RadioButton}">
        <Grid Background="#00FFFFFF">
            <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Stroke="#FFEE9D37" Width="Auto" StrokeThickness="2" RadiusX="11" RadiusY="11" Visibility="Hidden">
                <Rectangle.Fill>
                    <RadialGradientBrush RadiusX="-3" GradientOrigin="0.5,0.5" Center="0.5,0.5">
                        <GradientStop Color="#FFEE9D37" Offset="1" />
                        <GradientStop Color="#FFEE9D37" Offset="1" />
                        <GradientStop Color="#00EE9D37" Offset="0.043" />
                        <GradientStop Color="#00EE9D37" Offset="0.954" />
                        <GradientStop Color="#ECEE9D37" Offset="0.994" />
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="rectangle" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="rectangle" Property="Visibility" Value="Visible" />
                <Setter TargetName="rectangle" Property="Stroke" Value="#FFFDC176" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RadioLang" TargetType="{x:Type RadioButton}">
        <Grid x:Name="grid" Background="{TemplateBinding Background}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.455" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="HelpTemplate" TargetType="{x:Type Button}">
        <Grid>
            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}" Width="Auto" VerticalAlignment="Center" Foreground="#FFE9F5F7" FontSize="{TemplateBinding FontSize}" FontFamily="Raleway" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="SimpleBackgroundTemplate" TargetType="{x:Type Button}">
        <Grid Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="ProgressStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#FF06B025" />
        <Setter Property="Background" Value="#FFE6E6E6" />
        <Setter Property="BorderBrush" Value="#FFBCBCBC" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="PART_Track" RadiusX="6" RadiusY="5" />
                        <Grid x:Name="PART_Indicator">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3" />
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="5" RadiusY="2">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="StartButtonPictureTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid" OpacityMask="{x:Null}">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/start.png"/>
            </Grid.Background>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.93" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle HorizontalAlignment="Left" Height="169" Margin="0" Stroke="{x:Null}" VerticalAlignment="Top" Width="167"/>
            <TextBlock x:Name="textBlock" Margin="35.667,23,34.666,24.667" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}" Foreground="#FFFFFFFF" FontFamily="Arial" FontSize="16" FontWeight="Bold">
                <TextBlock.Effect>
                    <DropShadowEffect ShadowDepth="4" Direction="330" Color="Black" Opacity="0.5" BlurRadius="4" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/start_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/start_press.png" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="grid" Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="FullCheckButtonPictureTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/button.png" />
            </Grid.Background>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.755" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_press.png" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="grid" Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/checkdisable.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="CancelButtonPictureTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/button2.png" />
            </Grid.Background>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.71" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/progressblue.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/progressred.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="LinkButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="#FFF0F0F0" FontFamily="Montserrat Alternates Light" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="textBlock" Property="TextDecorations" Value="Underline" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="AccountTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid" Margin="0,0,-57,0">
            <Rectangle x:Name="rectangle" Margin="5.5,6.5,0,0" HorizontalAlignment="Left" Width="20" OpacityMask="{TemplateBinding Background}" Fill="#76C6FF" Height="20" VerticalAlignment="Top" Stroke="{x:Null}" />
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" Margin="29.5,10,11,5.5" RenderTransformOrigin="0.389,0.2" Foreground="#76C6FF" FontFamily="Arial" FontWeight="Bold" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="#FFC45E" />
                <Setter TargetName="rectangle" Property="Fill" Value="#FFC45E" />
                <Setter TargetName="textBlock" Property="TextDecorations" Value="Underline" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DiscordTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid" Margin="0,0,-57,0">
            <Rectangle x:Name="rectangle" Margin="5.5,6.5,0,0" HorizontalAlignment="Left" Width="16" OpacityMask="{TemplateBinding Background}" Fill="#FF566775" Height="16" VerticalAlignment="Top" Stroke="{x:Null}" />
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" Margin="26.5,8.5,14,7" RenderTransformOrigin="0.389,0.2" Foreground="#FF566775" FontFamily="Arial" FontWeight="Bold" FontSize="11" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="#FF3DA9F1" />
                <Setter TargetName="rectangle" Property="Fill" Value="#FF3DA9F1" />
                <Setter TargetName="textBlock" Property="TextDecorations" Value="Underline" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ExitTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/close.png" />
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/close_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SuppTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid" Margin="0,0,-57,0">
            <Rectangle x:Name="rectangle" Margin="5.5,6.5,0,0" HorizontalAlignment="Left" Width="16" OpacityMask="{TemplateBinding Background}" Fill="#FF566775" Height="16" VerticalAlignment="Top" Stroke="{x:Null}" />
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" Margin="26.5,8.5,14,7" RenderTransformOrigin="0.389,0.2" Foreground="#FF566775" FontFamily="Arial" FontWeight="Bold" FontSize="11" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="textBlock" Property="TextBlock.Foreground" Value="#FF3DA9F1" />
                <Setter TargetName="rectangle" Property="Fill" Value="#FF3DA9F1" />
                <Setter TargetName="textBlock" Property="TextDecorations" Value="Underline" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="grid" OpacityMask="{x:Null}" Width="267" Height="168" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/button.png"/>
            </Grid.Background>
            <Rectangle x:Name="rectangle" Width="267" Margin="0" OpacityMask="{x:Null}" Stroke="{x:Null}" Height="Auto"/>
            <TextBlock TextAlignment="Center" Margin="0,77,0,17" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="Arial" FontWeight="Bold" FontSize="12" Foreground="#FFFFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="rectangle" Property="Fill" >
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_hover.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="rectangle" Property="Fill" >
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_press.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Grid x:Name="grid" OpacityMask="{x:Null}" Width="267" Height="168" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/button2.png"/>
            </Grid.Background>
            <Rectangle x:Name="rectangle" Width="267" Margin="0" OpacityMask="{x:Null}" Stroke="{x:Null}" Height="Auto"/>
            <TextBlock TextAlignment="Center" Margin="0,77,0,17" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="Arial" FontWeight="Bold" FontSize="12" Foreground="#FFFFFFFF" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="rectangle" Property="Fill" >
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/progressblue.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="rectangle" Property="Fill" >
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/progressred.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="FileButton" TargetType="{x:Type Button}">
        <Grid x:Name="grid">
            <Grid.Background>
                <ImageBrush ImageSource="pictures/button.png" />
            </Grid.Background>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="grid" Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pictures/button_press.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>